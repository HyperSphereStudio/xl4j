#!/usr/bin/perl
use strict;
use warnings;
my $MAX_METHODS = 512; 
my $MAX_PARAMS = 8;
my $header = <<'END';
/**
 * Copyright (C) 2014-Present McLeod Moores Software Limited.  All rights reserved.
 */
package com.mcleodmoores.xl4j.javacode;

import java.math.BigDecimal;
import java.math.BigInteger;

import org.threeten.bp.LocalDate;

import com.mcleodmoores.xl4j.XLFunction;

/**
 * Class containing various combinations of parameter types.
 */
public class TestMethods {
  
  // CHECKSTYLE:OFF -- autogenerated.  
  public enum MyEnum { A, B };
  public class MyClass {};
END
print $header;
my @types = ("void" ,"boolean", "byte", "short", "char", "int", "float", "long", "double", "Boolean", "Byte", "Short", "Character", "Integer", "Float", "Long", "Double", "BigDecimal", "BigInteger", "String", "LocalDate", "MyClass", "Object", "MyEnum");
my %defaultReturn = ("boolean", "true", 
                  "byte", "0",
                  "short", "0",
                  "char", "\'x\'",
                  "int", "0",
                  "float", "0f",
                  "long", "0L",
                  "double", "0d",
                  "void", "");
my @excelFunctionAttribs = ("isVolatile", "isMultiThreadSafe", "isMacroEquivalent", "isAutoAsynchronous");
for (my $methodNumber = 0; $methodNumber < $MAX_METHODS; $methodNumber++) {
  my $returnType = $types[int(rand(@types))];
  my $numAttr = int(rand(@excelFunctionAttribs));
  my @copyAttrs = @excelFunctionAttribs;
  print "  \@XLFunction";
  if ($numAttr > 0) {
    print "(";
  }
  for (my $attrIdx = 0; $attrIdx < $numAttr; $attrIdx++) {
    print pop @copyAttrs;
    print "=";
    if (rand(1) > 0.5) {
      print "true";
    } else {
      print "false";
    }
    if ($attrIdx < $numAttr - 1) {
      print ", ";
    }
  }
  if ($numAttr > 0) {
    print ")";
  }
  print "\n";
  print "  public ${returnType} method${methodNumber}(";
  my $numParams = int(rand($MAX_PARAMS));
  for (my $paramNumber = 0; $paramNumber < $numParams; $paramNumber++) {
    # skip over void.
    my $paramType = $types[int(rand(@types - 1)) + 1];
    print "${paramType} paramName${paramNumber}";
    if ($paramNumber < $numParams - 1) {
      print ", ";
    }
  }
  print ") { ";
  if (exists($defaultReturn{$returnType})) {
    print "return ";
    print $defaultReturn{$returnType};
    print "; }\n\n"
  } else {
    print "return null; }\n\n";
  }
}
print <<'END';
  
  // CHECKSTYLE:ON
}
END

